{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["// import './creational/creational';\n// ------------------------------------\n\n// ==================factory-method=========================\n// interface Subscription {\n//   operation(): string;\n// }\n\n// class GamerSubscription implements Subscription {\n//   public operation(): string {\n//     return 'Gamer';\n//   }\n// }\n\n// class PremiumSubscription implements Subscription {\n//   public operation(): string {\n//     return 'Premium';\n//   }\n// }\n\n// abstract class SubscriptionCreator {\n//   public abstract createSubscription(): Subscription;\n\n//   public manageSubscription(): string {\n//     const subscription = this.createSubscription();\n\n//     return `Managing a ${subscription.operation()} subscription`;\n//   }\n// }\n\n// class GamerSubscriptionCreator extends SubscriptionCreator {\n//   public createSubscription(): Subscription {\n//     return new GamerSubscription();\n//   }\n// }\n\n// class PremiumSubscriptionCreator extends SubscriptionCreator {\n//   public createSubscription(): Subscription {\n//     return new PremiumSubscription();\n//   }\n// }\n\n// const gamerSubscriptionCreator = new GamerSubscriptionCreator();\n// console.log(gamerSubscriptionCreator.manageSubscription());\n\n// const premiumSubscriptionCreator = new PremiumSubscriptionCreator();\n// console.log(premiumSubscriptionCreator.manageSubscription());\n\n// =====================singleton==============================\n// interface ApiResponse {\n//   id: number;\n//   name: string;\n//   data: any;\n// }\n\n// export class ApiManager {\n//   private static instance: ApiManager;\n\n//   private constructor() {}\n\n//   public static getInstance(): ApiManager {\n//     if (!ApiManager.instance) {\n//       ApiManager.instance = new ApiManager();\n//     }\n//     return ApiManager.instance;\n//   }\n\n//   public async get(url: string): Promise<any> {\n//     try {\n//       const response = await fetch(url);\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n//       return (await response.json()) as any;\n//     } catch (error) {\n//       console.error('Failed to fetch data:', error);\n//       throw error;\n//     }\n//   }\n// }\n\n// // Використання Singleton для викликів API\n// const apiManager1 = ApiManager.getInstance();\n// const apiManager2 = ApiManager.getInstance();\n\n// export const API_KEY = 'bbcabf34e55a9240d0c44542dbf6e7ac';\n// export const BASE_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\n// apiManager1\n//   .get(`${BASE_URL}?q=Lviv&appid=${API_KEY}&units=metric`)\n//   .then(data => console.log('Data fetched:', data))\n//   .catch(error => console.error('Error fetching data:', error));\n\n// // Перевірка того, що екземпляри є однаковими\n// console.log(apiManager1 === apiManager2); // Виведе: true\n\n// =================builder===============================================\n// Інтерфейс будівельника\n// interface HouseBuilder {\n//   setWalls(walls: string): this;\n//   build(): House;\n// }\n\n// // Клас продукту\n// class House {\n//   public walls?: string;\n\n//   public describe(): void {\n//     console.log(`House details:\\nWalls: ${this.walls}`);\n//   }\n// }\n\n// // Реалізація будівельника-----------------------\n// class Builder implements HouseBuilder {\n//   private house: House;\n\n//   constructor() {\n//     this.house = new House();\n//   }\n\n//   public setWalls(walls: string): this {\n//     this.house.walls = walls;\n\n//     return this;\n//   }\n\n//   public build(): House {\n//     const result = this.house;\n//     // console.log(result);\n//     this.reset(); // Підготовка для нового будівництва\n\n//     return result;\n//   }\n\n//   private reset(): void {\n//     console.log(this.house);\n//     this.house = new House();\n//     console.log(this.house);\n//   }\n// }\n\n// // Використання\n// const builder = new Builder();\n// const house1 = builder.setWalls('Brick walls').build();\n\n// -------\n\ninterface FlowerBouquetBuilder {\n  setFlowerType(flowerType: string): this;\n  setQuantity(quantity: number): this;\n  setColor(color: string): this;\n  setNeedsWrapping(needsWrapping: boolean): this;\n  build(): FlowerBouquet;\n}\nclass FlowerBouquet {\n  public flowerType?: string;\n  public quantity?: number;\n  public color?: string;\n  public needsWrapping?: boolean;\n\n  public describe(): void {\n    console.log(\n      `Bouquet details:\\nFlower Type: ${this.flowerType}\\nQuantity: ${this.quantity}\\nColor: ${this.color}\\nNeeds Wrapping: ${this.needsWrapping}`\n    );\n  }\n}\nclass FlowerBouquetBuilderImpl implements FlowerBouquetBuilder {\n  private bouquet: FlowerBouquet;\n\n  constructor() {\n    this.bouquet = new FlowerBouquet();\n  }\n\n  public setFlowerType(flowerType: string): this {\n    this.bouquet.flowerType = flowerType;\n    return this;\n  }\n\n  public setQuantity(quantity: number): this {\n    this.bouquet.quantity = quantity;\n    return this;\n  }\n\n  public setColor(color: string): this {\n    this.bouquet.color = color;\n    return this;\n  }\n\n  public setNeedsWrapping(needsWrapping: boolean): this {\n    this.bouquet.needsWrapping = needsWrapping;\n    return this;\n  }\n\n  public build(): FlowerBouquet {\n    const result = this.bouquet;\n    this.reset();\n    return result;\n  }\n\n  private reset(): void {\n    this.bouquet = new FlowerBouquet();\n  }\n}\n\nconst builder = new FlowerBouquetBuilderImpl();\n\nconst bouquetRoses = builder\n  .setFlowerType('Roses')\n  .setQuantity(12)\n  .setColor('Red')\n  .setNeedsWrapping(true)\n  .build();\n\nbouquetRoses.describe();\n"],"names":["FlowerBouquet","__publicField","FlowerBouquetBuilderImpl","flowerType","quantity","color","needsWrapping","result","builder","bouquetRoses"],"mappings":"82BA0JA,MAAMA,CAAc,CAApB,cACSC,EAAA,mBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,sBAEA,UAAiB,CACd,QAAA,IACN;AAAA,eAAkC,KAAK,UAAU;AAAA,YAAe,KAAK,QAAQ;AAAA,SAAY,KAAK,KAAK;AAAA,kBAAqB,KAAK,aAAa,EAAA,CAE9I,CACF,CACA,MAAMC,CAAyD,CAG7D,aAAc,CAFND,EAAA,gBAGD,KAAA,QAAU,IAAID,CACrB,CAEO,cAAcG,EAA0B,CAC7C,YAAK,QAAQ,WAAaA,EACnB,IACT,CAEO,YAAYC,EAAwB,CACzC,YAAK,QAAQ,SAAWA,EACjB,IACT,CAEO,SAASC,EAAqB,CACnC,YAAK,QAAQ,MAAQA,EACd,IACT,CAEO,iBAAiBC,EAA8B,CACpD,YAAK,QAAQ,cAAgBA,EACtB,IACT,CAEO,OAAuB,CAC5B,MAAMC,EAAS,KAAK,QACpB,YAAK,MAAM,EACJA,CACT,CAEQ,OAAc,CACf,KAAA,QAAU,IAAIP,CACrB,CACF,CAEA,MAAMQ,EAAU,IAAIN,EAEdO,EAAeD,EAClB,cAAc,OAAO,EACrB,YAAY,EAAE,EACd,SAAS,KAAK,EACd,iBAAiB,EAAI,EACrB,MAAM,EAETC,EAAa,SAAS"}